# shamelessly cribbed from https://github.com/pydata/xarray/blob/master/.github/workflows/ci.yaml
name: Build and test climlab

on: push

jobs:
  build-linux:
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest",]
        python-version: ["3.7",]
    steps:
      - uses: actions/checkout@v2
      - name: Set environment variables
        run: |
          echo "CONDA_ENV_FILE=ci/requirements-py37-linux.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
      - name: Cache conda
        uses: actions/cache@v2
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-py${{ matrix.python-version }}-${{
            hashFiles('ci/requirements/**.yml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          channel-priority: strict
          mamba-version: "*"
          activate-environment: test-env
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true

      - name: Install conda dependencies
        run: |
          mamba env update -f $CONDA_ENV_FILE
      - name: Build and install climlab
        run: |
          python -m pip install --no-deps -e .
      - name: Import climlab
        run: |
          python -c "import climlab"
      - name: Run tests
        run: |
          python -m pytest -n 4 \
             --cov=climlab \
             --cov-report=xml
      # - name: Upload code coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage.xml
      #     flags: unittests
      #     env_vars: RUNNER_OS,PYTHON_VERSION
      #     name: codecov-umbrella
      #     fail_ci_if_error: false
